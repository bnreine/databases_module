Use the commands above to complete the following tasks, and submit the SQL statements.
Real-world examples must be distinct from those used in the text.

1. List the commands for adding, updating, and deleting data.

adding: INSERT INTO people VALUES (1234, "Joe", "Smith");  //Here, I'm assuming there's
an id, first name and last name column in a table named "people"

updating: UPDATE people SET first name="Brian" WHERE id=1234;

deleting: DELETE FROM people WHERE id=1234;



2. Explain the structure for each type of command.

adding: INSERT ----> see above for actual command syntax structure.  You insert
into the table people the following values in order they're listed as column headings
in the table (id, first name, last name)

updating: UPDATE ---> see above for actual comand syntax structure.  You update
values inside the table people.  Specifically, you set first name to "Brian" in the row
where the id is 1234.

deleting: DELETE---> see above for actual command syntax structure.  You delete the
entire row from table people that contains the id 1234



3. What are some of the data types that can be used in tables? Give a real-world
example of each type.

Boolean: rained ---> did it rain today? (true or false)

Integer: likes---> number of likes on a facebook post



4. Decide how to create a new table to hold a list of people invited to a wedding
dinner. The table
needs to have first and last names, whether they sent in their RSVP, the number
of guests they are bringing,
and the number of meals (1 for adults and 1/2 for children).

Make a table (schema) that will have 6 column headings (id, first_name, last_name,
sentRSVP, guests, meals)


  -Which data type would you use to store each of the following pieces of information?
    --id ---> Integer (in case there happens to be two people with the same name)
    --First and last name. --> both text
    --Whether they sent in their RSVP. ---> boolean
    --Number of guests. ---> integer
    --Number of meals. ---> numeric

*******INSIDE wedding database***********************


  -Write a command that creates the table to track the wedding dinner.
    CREATE TABLE dinner (
      id integer,
      first_name text,
      last_name text,
      sentRSVP  boolean,
      guests integer,
      meals numeric(2,1)
    );


  -Write a command that adds a column to track whether the guest sent a thank you card.

    ALTER TABLE dinner ADD COLUMN thank_you_sent boolean;


  -You have decided to move the data about the meals to another table, so write a
  command
  to remove the column storing the number meals from the wedding table.

    ALTER TABLE dinner DROP COLUMN meals;




  -The guests will need a place to sit at the reception, so write a command that
  adds a column for table number.

    ALTER TABLE dinner ADD COLUMN table_number integer;



  -The wedding is over and we do not need to keep this information, so write a
  command that
  deletes the table numbers from the database.

    ALTER TABLE dinner DROP COLUMN table_number;



5. Write a command to create a new table to hold the books in a library with the
columns ISBN,
title, author, genre, publishing date, number of copies, and available copies.

  CREATE TABLE books (
    ISBN bigint,
    title text,
    author text,
    genre text,
    publishing_date date,
    number_of_copies integer,
    available_copies integer
  );



  -Find three books and add their information to the table.

INSERT INTO books (ISBN, title, author, genre, publishing_date, number_of_copies, available_copies)
VALUES
(9781476782812, 'Zorba the Greek', 'Nikos Kazantzakis', 'fiction', '2014-12-23', 198000, 40938),
(9780441172719, 'Dune', 'Frank Herbert', 'fiction', '1990-09-01', 205878, 30874),
(9781568364278, 'Musashi: An Epic Novel of the Samurai Era', 'Eiji Yoshikawa', 'fiction', '2012-09-14', 498737, 12874);



  -Someone has just checked out one of the books. Change the number of available
  copies to 1 fewer.

    UPDATE books SET available_copies = available_copies - 1 WHERE title='Dune';



  -Now one of the books has been added to the banned books list. Remove it from
  the table.

    DELETE FROM books WHERE title='Dune';


6. Write a command to make a new table to hold spacecrafts. Information should
include id, name,
year launched, country of origin, a brief description of the mission, orbiting
body, if it is
currently operating, and its approximate miles from Earth. In addition to the
table creation,
provide commands that perform the following operations:

  CREATE TABLE spacecrafts (
    id integer,
    name text,
    year_launched date,
    country_of_origin text,
    description text,
    orbiting_body text,
    is_operating boolean,
    miles_from_earth bigint
  );


  -Add three non-Earth-orbiting satellites to the table.

INSERT INTO spacecrafts
VALUES
(1, 'THEMIS', '2007-02-17', 'America', 'Mission THEMIS', 'Earth Moon', TRUE, 109384),
(2, 'Akatsuki', '2010-05-20', 'Japan', 'Mission Akatsuki', 'Sun', FALSE, 3904838),
(3, 'Mars Odyssey', '2001-04-07', 'America', 'Mission Mars Odyssey', 'Mars', TRUE, 983743);


  -Remove one of the satellites from the table since it has just crashed into
  the planet.

DELETE FROM spacecrafts WHERE id=2;


  -Edit another satellite because it is no longer operating and change the
  value to reflect that.

UPDATE spacecrafts SET is_operating=FALSE WHERE id=3;


7. Write a command to create a new table to hold the emails in your inbox.
This table should
include an id, the subject line, the sender, any additional recipients, the
body of the email,
the timestamp, whether or not you have read the email, and the id of the
email chain it's in.
Also provide commands that perform the following operations:


CREATE TABLE emails (
  id integer,
  subject text,
  sender text,
  other_recipients text[],
  body text,
  time timestamp,
  read boolean,
  chain_id integer
);

SELECT * FROM emails;


  -Add three new emails to the inbox.

INSERT INTO emails VALUES
(1, 'Long time buddy', 'Mike', ARRAY['Sam', 'Chris'], 'I missed you the other day', '1999-01-08 04:05:06', FALSE, 23),
(2, 'Today is the day', 'Candy', ARRAY['Burt', 'Susan'], 'We are doing the race', '1999-01-08 07:07:06', TRUE, 56),
(3, 'Crazy video', 'Zeek', ARRAY['Bob', 'Sid'], 'Check out that cat', '1999-01-09 07:09:16', FALSE, 39);
SELECT * FROM emails;



  -You deleted one of the emails, so write a command to remove the row from
  the inbox table.


DELETE FROM emails WHERE id=2;


  -You started reading an email but just heard a crash in another room. Mark the
  email as unread before investigating the crash, so you can come back and read
  it later.

  UPDATE emails SET read=FALSE WHERE id=1;
